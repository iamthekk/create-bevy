name: Release to GitHub Packages

on:
  push:
    tags:
      - 'v*.*.*'

# 限制并发执行
concurrency:
  group: roblox-testing-${{ github.ref }}
  cancel-in-progress: false

# 设置 workflow 权限
permissions:
  contents: write
  packages: write

env:
  NODE_VERSION: '20.x'

jobs:
  # 1. 先运行完整的测试流程
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 验证版本号一致性
        run: |
          TAG_VERSION="${{ github.ref_name }}"
          PACKAGE_VERSION="v$(node -p "require('./package.json').version")"

          echo "Git Tag: $TAG_VERSION"
          echo "Package Version: $PACKAGE_VERSION"

          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "❌ 错误: Git tag ($TAG_VERSION) 与 package.json 版本 ($PACKAGE_VERSION) 不一致！"
            echo "请确保 package.json 中的版本号与 tag 匹配。"
            exit 1
          fi

          echo "✅ 版本号验证通过"

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: 安装依赖
        run: pnpm install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 构建 TypeScript
        run: pnpm run build

      - name: 安装 Rokit
        uses: CompeyDev/setup-rokit@v0.1.2

      - name: 使用 Rojo 构建 Place 文件
        run: |
          rojo --version
          rojo build default.project.json -o test-place.rbxl

      - name: 上传到测试 Place 并运行测试
        run: |
          cp .env.roblox .env
          npm test

      - name: 上传测试报告
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports-release
          path: .test-result/*.json
          retention-days: 30
          include-hidden-files: true

  # 2. 测试通过后发布
  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://npm.pkg.github.com'

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.0

      - name: 安装依赖
        run: pnpm install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 构建 TypeScript (发布模式)
        run: pnpm run build

      - name: 发布到 GitHub Packages
        run: npm run publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 创建 GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## 更新内容

            查看完整的更新日志: [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/CHANGELOG.md)

            ## 测试状态

            ✅ 所有测试已通过

            ## 安装

            ```bash
            npm install @white-dragon-bevy/${{ github.repository }}@${{ github.ref_name }}
            ```

            或

            ```bash
            pnpm add @white-dragon-bevy/${{ github.repository }}@${{ github.ref_name }}
            ```
          draft: false
          prerelease: false

      - name: 发布成功通知
        if: success()
        run: |
          echo "✅ 成功发布到 GitHub Packages！"
          echo "Package: @white-dragon-bevy/${{ github.repository }}@${{ github.ref_name }}"
          echo "GitHub Packages: https://github.com/white-dragon-bevy/${{ github.repository }}/packages"
